1. 一般采用的指针初始化模式
         ●  -->  ●  -->  ●  -->  ●
   |     |
  prev  p/q
  (1) 为什么不把q初始化为p的下一个节点,
    > 不需要判定q是否存在
  (2) 判定初始化: prev==null
  (3) 在查找倒数第K个节点时, 实际操作中不需要p:
    > 可以根据prev得到p
    > 如果要删除p: prev->next=q
2. 要注意造成环的问题
  (1) 头节点变成【尾节点】, 比如ReverseKGroup中p节点原来为头节点, 翻转后变成尾节点,
  但是它仍然存在指向q的链接, 需要将它这个链接(尾节点next)置null
     <--------
     |       |
     ● -/-> ● <-- ● <-- ●
     p       q
  (2) 非尾节点变成【尾节点】, 比如PartitionList中r节点原来为第3个节点, 调整顺序(拆分链接)后变成尾节点,
  但是它仍然存在指向s的链接, 需要将它这个链接(尾节点next)置null
             -------------->
            |              |
     ● --> ●    ● -->  ●
                  |        |
                  <---------
     p     q      r        s
